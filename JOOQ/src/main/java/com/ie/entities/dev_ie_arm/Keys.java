/**
 * This class is generated by jOOQ
 */
package com.ie.entities.dev_ie_arm;


import com.ie.entities.dev_ie_arm.tables.Device;
import com.ie.entities.dev_ie_arm.tables.Extracharge;
import com.ie.entities.dev_ie_arm.tables.Rro;
import com.ie.entities.dev_ie_arm.tables.Servicecenter;
import com.ie.entities.dev_ie_arm.tables.records.DeviceRecord;
import com.ie.entities.dev_ie_arm.tables.records.ExtrachargeRecord;
import com.ie.entities.dev_ie_arm.tables.records.RroRecord;
import com.ie.entities.dev_ie_arm.tables.records.ServicecenterRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>dev_ie_arm</code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final Identity<DeviceRecord, Long> IDENTITY_DEVICE = Identities0.IDENTITY_DEVICE;
	public static final Identity<ExtrachargeRecord, Integer> IDENTITY_EXTRACHARGE = Identities0.IDENTITY_EXTRACHARGE;
	public static final Identity<RroRecord, Integer> IDENTITY_RRO = Identities0.IDENTITY_RRO;
	public static final Identity<ServicecenterRecord, Integer> IDENTITY_SERVICECENTER = Identities0.IDENTITY_SERVICECENTER;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<DeviceRecord> KEY_DEVICE_PRIMARY = UniqueKeys0.KEY_DEVICE_PRIMARY;
	public static final UniqueKey<DeviceRecord> KEY_DEVICE_UNIQUEKEY_UNIQUE = UniqueKeys0.KEY_DEVICE_UNIQUEKEY_UNIQUE;
	public static final UniqueKey<ExtrachargeRecord> KEY_EXTRACHARGE_PRIMARY = UniqueKeys0.KEY_EXTRACHARGE_PRIMARY;
	public static final UniqueKey<RroRecord> KEY_RRO_PRIMARY = UniqueKeys0.KEY_RRO_PRIMARY;
	public static final UniqueKey<RroRecord> KEY_RRO_FISCNUM_UNIQUE = UniqueKeys0.KEY_RRO_FISCNUM_UNIQUE;
	public static final UniqueKey<ServicecenterRecord> KEY_SERVICECENTER_PRIMARY = UniqueKeys0.KEY_SERVICECENTER_PRIMARY;
	public static final UniqueKey<ServicecenterRecord> KEY_SERVICECENTER_AGREEMENTNO_UNIQUE = UniqueKeys0.KEY_SERVICECENTER_AGREEMENTNO_UNIQUE;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------

	public static final ForeignKey<DeviceRecord, RroRecord> DEVICE_RRO_FK = ForeignKeys0.DEVICE_RRO_FK;

	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends AbstractKeys {
		public static Identity<DeviceRecord, Long> IDENTITY_DEVICE = createIdentity(Device.DEVICE, Device.ID);
		public static Identity<ExtrachargeRecord, Integer> IDENTITY_EXTRACHARGE = createIdentity(Extracharge.EXTRACHARGE, Extracharge.ID);
		public static Identity<RroRecord, Integer> IDENTITY_RRO = createIdentity(Rro.RRO, Rro.ID);
		public static Identity<ServicecenterRecord, Integer> IDENTITY_SERVICECENTER = createIdentity(Servicecenter.SERVICECENTER, Servicecenter.ID);
	}

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<DeviceRecord> KEY_DEVICE_PRIMARY = createUniqueKey(Device.DEVICE, Device.ID);
		public static final UniqueKey<DeviceRecord> KEY_DEVICE_UNIQUEKEY_UNIQUE = createUniqueKey(Device.DEVICE, Device.UNIQUEKEY);
		public static final UniqueKey<ExtrachargeRecord> KEY_EXTRACHARGE_PRIMARY = createUniqueKey(Extracharge.EXTRACHARGE, Extracharge.ID);
		public static final UniqueKey<RroRecord> KEY_RRO_PRIMARY = createUniqueKey(Rro.RRO, Rro.ID);
		public static final UniqueKey<RroRecord> KEY_RRO_FISCNUM_UNIQUE = createUniqueKey(Rro.RRO, Rro.FISCNUM);
		public static final UniqueKey<ServicecenterRecord> KEY_SERVICECENTER_PRIMARY = createUniqueKey(Servicecenter.SERVICECENTER, Servicecenter.ID);
		public static final UniqueKey<ServicecenterRecord> KEY_SERVICECENTER_AGREEMENTNO_UNIQUE = createUniqueKey(Servicecenter.SERVICECENTER, Servicecenter.AGREEMENTNO);
	}

	private static class ForeignKeys0 extends AbstractKeys {
		public static final ForeignKey<DeviceRecord, RroRecord> DEVICE_RRO_FK = createForeignKey(com.ie.entities.dev_ie_arm.Keys.KEY_RRO_PRIMARY, Device.DEVICE, Device.RROID);
	}
}
